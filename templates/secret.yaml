{{- if or .Values.apono.resourcesConfig .Values.apono.resourceType}}
apiVersion: v1
kind: Secret
metadata:
  name: apono
type: Opaque
stringData:
  token: {{ .Values.apono.token }}
  {{- if .Values.apono.resourcesConfig }}
  config: {{ .Values.apono.resourcesConfig | quote }}
  {{- else if eq .Values.apono.resourceType "mongodb" }}
  config: |-
    {
      "apono_resources": [
        {
          "name": "{{ .Values.apono.resourceName }}",
          "type": "mongodb",
          "config": {
            "hostname": "{{ .Values.apono.resourceHostname }}",
            "port": "{{ default "27017" .Values.apono.resourcePort }}",
            "username": "{{ default "${username}" .Values.apono.resourceUsername }}",
            "password": "{{ default "${password}" .Values.apono.resourcePassword }}"
          }
        }
      ]
    }
  {{- else if eq .Values.apono.resourceType "postgresql" }}
  config: |-
    {
      "apono_resources": [
        {
          "name": "{{ .Values.apono.resourceName }}",
          "type": "postgresql",
          "config": {
            "hostname": "{{ .Values.apono.resourceHostname }}",
            "port": "{{ default 5432 .Values.apono.resourcePort }}",
            "username": "{{ default "${username}" .Values.apono.resourceUsername }}",
            "password": "{{ default "${password}" .Values.apono.resourcePassword }}"
            "dbname": "postgres",
            "sslmode": "disable",
            "isSuperuser": false
          }
        }
      ]
    }
  {{- else if eq .Values.apono.resourceType "s3" }}
  config: |-
    {
      "apono_resources": [
        {
          "name": "{{ .Values.apono.resourceName }}",
          "type": "s3",
          "config": {
            "aws_access_key": "{{ default "${username}" .Values.apono.resourceUsername }}",
            "aws_secret_key": "{{ default "${password}" .Values.apono.resourcePassword }}"
          }
        }
      ]
    }
  {{- end }}
{{- end }}
